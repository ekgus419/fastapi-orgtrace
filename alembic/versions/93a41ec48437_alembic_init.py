"""alembic init

Revision ID: 93a41ec48437
Revises: 
Create Date: 2025-04-24 16:38:01.707894

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '93a41ec48437'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('employee',
    sa.Column('seq', sa.Integer(), autoincrement=True, nullable=False, comment='직원 고유 순번'),
    sa.Column('position_seq', sa.Integer(), nullable=True, comment='직책 순번'),
    sa.Column('rank_seq', sa.Integer(), nullable=True, comment='직위 순번'),
    sa.Column('organization_seq', sa.Integer(), nullable=True, comment='소속 조직 순번'),
    sa.Column('status', sa.String(length=3), nullable=True, comment='직원 상태 코드 (100: 재직, 200: 휴직, 300: 퇴사)'),
    sa.Column('name', sa.String(length=100), nullable=False, comment='직원 이름'),
    sa.Column('email', sa.String(length=100), nullable=False, comment='이메일'),
    sa.Column('phone_number', sa.String(length=20), nullable=False, comment='핸드폰 번호'),
    sa.Column('extension_number', sa.String(length=10), nullable=False, comment='내선 번호'),
    sa.Column('hire_date', sa.Date(), nullable=False, comment='입사일'),
    sa.Column('birth_date', sa.Date(), nullable=False, comment='생년월일'),
    sa.Column('incentive_yn', sa.Enum('Y', 'N'), nullable=False, comment='인센티브 여부'),
    sa.Column('marketer_yn', sa.Enum('Y', 'N'), nullable=False, comment='마케터 여부'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='직원 생성일'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='직원 수정일'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='퇴사일 (퇴사하지 않은 경우 NULL)'),
    sa.PrimaryKeyConstraint('seq'),
    sa.UniqueConstraint('email')
    )
    op.create_table('employee_history',
    sa.Column('seq', sa.Integer(), autoincrement=True, nullable=False, comment='직원 히스토리 고유 순번'),
    sa.Column('employee_seq', sa.Integer(), nullable=False, comment='직원 고유 순번'),
    sa.Column('action_type', sa.Enum('INSERT', 'UPDATE', 'DELETE'), nullable=False, comment='수정 타입'),
    sa.Column('before_value', sa.Text(), nullable=True, comment='변경 전 원본 데이터'),
    sa.Column('after_value', sa.Text(), nullable=True, comment='변경 후 수정 데이터'),
    sa.Column('username', sa.String(length=50), nullable=True, comment='작업자'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='직원 히스토리 생성일'),
    sa.PrimaryKeyConstraint('seq')
    )
    op.create_table('organization',
    sa.Column('seq', sa.Integer(), autoincrement=True, nullable=False, comment='조직 고유 순번'),
    sa.Column('name', sa.String(length=100), nullable=False, comment='조직명 (부문, 본부, 팀명)'),
    sa.Column('level', sa.Integer(), nullable=False, comment='조직 수준 (1: 부문, 2: 본부, 3: 팀)'),
    sa.Column('parent_seq', sa.Integer(), nullable=True, comment='상위 조직 순번 (부모 ID)'),
    sa.Column('is_visible', sa.Boolean(), nullable=True, comment='조직 표시 여부 (TRUE: 표시, FALSE: 숨김)'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='조직 생성일'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='조직 수정일'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='조직 삭제일 (삭제되지 않은 경우 NULL)'),
    sa.PrimaryKeyConstraint('seq')
    )
    op.create_table('organization_history',
    sa.Column('seq', sa.Integer(), autoincrement=True, nullable=False, comment='조직 히스토리 고유 순번'),
    sa.Column('organization_seq', sa.Integer(), nullable=False, comment='조직 고유 순번'),
    sa.Column('action_type', sa.Enum('INSERT', 'UPDATE', 'DELETE'), nullable=False, comment='수정 타입'),
    sa.Column('before_value', sa.Text(), nullable=True, comment='변경 전 원본 데이터'),
    sa.Column('after_value', sa.Text(), nullable=True, comment='변경 후 수정 데이터'),
    sa.Column('username', sa.String(length=50), nullable=True, comment='작업자'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='직원 히스토리 생성일'),
    sa.PrimaryKeyConstraint('seq')
    )
    op.create_table('position',
    sa.Column('seq', sa.Integer(), autoincrement=True, nullable=False, comment='직책 고유 순번'),
    sa.Column('title', sa.String(length=100), nullable=False, comment='직책명 (예: CEO, CL, L, PM, M)'),
    sa.Column('role_seq', sa.Integer(), nullable=False, comment='직책에 할당된 역할'),
    sa.Column('description', sa.String(length=255), nullable=True, comment='직책 설명 (선택적)'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='직책 생성일'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='직책 수정일'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='직책 삭제일 (삭제되지 않은 경우 NULL)'),
    sa.PrimaryKeyConstraint('seq')
    )
    op.create_table('rank',
    sa.Column('seq', sa.Integer(), autoincrement=True, nullable=False, comment='직위 고유 순번'),
    sa.Column('title', sa.String(length=100), nullable=False, comment='직위명 (예: 부문장, 본부장)'),
    sa.Column('description', sa.String(length=255), nullable=True, comment='직위 설명 (선택적)'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='직위 생성일'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='직위 수정일'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='직위 삭제일 (삭제되지 않은 경우 NULL)'),
    sa.PrimaryKeyConstraint('seq')
    )
    op.create_table('users',
    sa.Column('seq', sa.Integer(), autoincrement=True, nullable=False, comment='회원 고유 순번'),
    sa.Column('username', sa.String(length=50), nullable=False, comment='회원 아이디'),
    sa.Column('email', sa.String(length=100), nullable=False, comment='회원 이메일'),
    sa.Column('password', sa.String(length=128), nullable=False, comment='회원 비밀번호'),
    sa.Column('current_refresh_token', sa.String(length=512), nullable=True, comment='유효한 Refresh Token'),
    sa.Column('type', sa.String(length=3), nullable=False, comment='회원 유형 (100: employee, 200: agency)'),
    sa.Column('status', sa.String(length=3), nullable=False, comment='회원 상태 (100: active, 200: inactive)'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='회원 생성일'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='회원 정보 수정일'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='회원 삭제일 (삭제되지 않은 경우 NULL)'),
    sa.PrimaryKeyConstraint('seq'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_index(op.f('ix_users_seq'), 'users', ['seq'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_seq'), table_name='users')
    op.drop_table('users')
    op.drop_table('rank')
    op.drop_table('position')
    op.drop_table('organization_history')
    op.drop_table('organization')
    op.drop_table('media')
    op.drop_table('employee_history')
    op.drop_table('employee')
    # ### end Alembic commands ###
